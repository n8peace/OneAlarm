#!/bin/bash

# GitHub CI/CD Workflow Setup Script
# This script provides instructions for setting up the complete CI/CD pipeline

echo "🚀 Setting up GitHub CI/CD Workflow for OneAlarm by SunriseAI"
echo "================================================================"

echo ""
echo "📋 Prerequisites:"
echo "1. GitHub repository with admin access"
echo "2. Supabase projects (development and production)"
echo "3. All required API keys and secrets"
echo ""

echo "🔧 Step 1: Configure GitHub Environments"
echo "----------------------------------------"
echo "1. Go to your GitHub repository"
echo "2. Navigate to Settings > Environments"
echo "3. Create 'development' environment:"
echo "   - Name: development"
echo "   - Protection rules: Optional"
echo "4. Create 'production' environment:"
echo "   - Name: production"
echo "   - Protection rules: Required reviewers"
echo "   - Wait timer: 5 minutes (recommended)"
echo ""

echo "🔐 Step 2: Configure Repository Secrets"
echo "----------------------------------------"
echo "Go to Settings > Secrets and variables > Actions"
echo "Add the following secrets:"
echo ""

echo "Development Environment Secrets:"
echo "- SUPABASE_URL_DEV"
echo "- SUPABASE_SERVICE_ROLE_KEY_DEV"
echo "- OPENAI_API_KEY_DEV"
echo "- NEWSAPI_KEY_DEV"
echo "- SPORTSDB_API_KEY_DEV"
echo "- RAPIDAPI_KEY_DEV"
echo "- ABSTRACT_API_KEY_DEV"
echo "- SUPABASE_DEV_PROJECT_REF"
echo "- SUPABASE_ACCESS_TOKEN"
echo ""

echo "Production Environment Secrets:"
echo "- SUPABASE_URL_PROD"
echo "- SUPABASE_SERVICE_ROLE_KEY_PROD"
echo "- OPENAI_API_KEY_PROD"
echo "- NEWSAPI_KEY_PROD"
echo "- SPORTSDB_API_KEY_PROD"
echo "- RAPIDAPI_KEY_PROD"
echo "- ABSTRACT_API_KEY_PROD"
echo "- SUPABASE_PROD_PROJECT_REF"
echo "- SUPABASE_ACCESS_TOKEN"
echo ""

echo "🛡️ Step 3: Configure Branch Protection Rules"
echo "---------------------------------------------"
echo "Go to Settings > Branches"
echo ""

echo "For 'develop' branch:"
echo "1. Add rule for 'develop'"
echo "2. Check 'Require a pull request before merging'"
echo "3. Check 'Require status checks to pass before merging'"
echo "4. Check 'Require branches to be up to date before merging'"
echo "5. Check 'Require pull request reviews before merging'"
echo "6. Check 'Restrict pushes that create files larger than 100MB'"
echo ""

echo "For 'main' branch:"
echo "1. Add rule for 'main'"
echo "2. Check 'Require a pull request before merging'"
echo "3. Check 'Require status checks to pass before merging'"
echo "4. Check 'Require branches to be up to date before merging'"
echo "5. Check 'Require pull request reviews before merging'"
echo "6. Check 'Require review from code owners'"
echo "7. Check 'Restrict direct pushes to the main branch'"
echo "8. Check 'Require linear history'"
echo "9. Check 'Restrict pushes that create files larger than 100MB'"
echo ""

echo "📝 Step 4: Update CODEOWNERS (if needed)"
echo "----------------------------------------"
echo "Review .github/CODEOWNERS file and update with appropriate code owners"
echo ""

echo "🧪 Step 5: Test the Workflow"
echo "----------------------------"
echo "1. Create a feature branch:"
echo "   git checkout -b feature/test-workflow"
echo ""
echo "2. Make a small change and commit:"
echo "   echo '# Test' >> README.md"
echo "   git add README.md"
echo "   git commit -m 'Test CI workflow'"
echo "   git push origin feature/test-workflow"
echo ""
echo "3. Check GitHub Actions tab to see the workflow running"
echo ""

echo "✅ Step 6: Verify Setup"
echo "----------------------"
echo "1. Check that all workflows are present in .github/workflows/"
echo "2. Verify all secrets are configured"
echo "3. Test feature branch CI"
echo "4. Test develop deployment"
echo "5. Test production promotion"
echo ""

echo "📚 Documentation"
echo "---------------"
echo "See docs/GITHUB_CI_CD_WORKFLOW.md for complete documentation"
echo ""

echo "🎉 Setup Complete!"
echo "=================="
echo "Your GitHub CI/CD pipeline is now configured for:"
echo "• Feature Branch → Develop → Main workflow"
echo "• Automated testing and validation"
echo "• Development and production deployments"
echo "• Manual production promotion with approval"
echo ""

echo "Next steps:"
echo "1. Test the workflow with a feature branch"
echo "2. Configure monitoring and alerts"
echo "3. Set up team notifications"
echo "4. Review and customize workflows as needed" 