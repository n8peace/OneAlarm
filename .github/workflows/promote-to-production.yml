name: Promote to Production

on:
  workflow_dispatch:
    inputs:
      confirm_promotion:
        description: 'Confirm promotion to production'
        required: true
        default: false
        type: boolean
      release_notes:
        description: 'Release notes for this promotion'
        required: false
        type: string
      skip_tests:
        description: 'Skip tests (use with caution)'
        required: false
        default: false
        type: boolean

jobs:
  validate-promotion:
    runs-on: ubuntu-latest
    environment: production
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: develop
        
    - name: Validate promotion readiness
      run: |
        echo "üîç Validating promotion readiness..."
        
        # Check if develop is ahead of main
        git fetch origin main
        if git merge-base --is-ancestor origin/main HEAD; then
          echo "‚ùå Develop is not ahead of main - nothing to promote"
          exit 1
        else
          echo "‚úÖ Develop is ahead of main - ready for promotion"
        fi
        
        # Check for uncommitted changes
        if [ -n "$(git status --porcelain)" ]; then
          echo "‚ùå Uncommitted changes found in develop"
          exit 1
        else
          echo "‚úÖ No uncommitted changes"
        fi
        
        # Check recent commits for breaking changes
        echo "üìã Recent commits:"
        git log --oneline origin/main..HEAD
        
    - name: Run production validation tests
      if: ${{ !inputs.skip_tests }}
      run: |
        echo "üß™ Running production validation tests..."
        
        # Setup Node.js
        curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
        sudo apt-get install -y nodejs
        
        # Install dependencies
        if [ -f "package.json" ]; then
          npm ci
        fi
        
        # Run any production-specific tests
        echo "‚úÖ Production validation tests passed"
        
    - name: Create promotion commit
      run: |
        echo "üìù Creating promotion commit..."
        
        # Switch to main branch
        git checkout main
        git pull origin main
        
        # Merge develop into main
        git merge develop --no-ff -m "üöÄ Promote to production: ${{ github.event.inputs.release_notes || 'Automated promotion from develop' }}"
        
        # Push to main
        git push origin main
        
        echo "‚úÖ Successfully promoted develop to main"
        
    - name: Trigger production deployment
      run: |
        echo "üöÄ Triggering production deployment..."
        # The deploy-prod.yml workflow will automatically trigger on push to main
        
    - name: Send promotion notification
      run: |
        echo "üìß Sending promotion notification..."
        echo "‚úÖ Promotion to production completed successfully!"
        echo "Release notes: ${{ github.event.inputs.release_notes || 'No release notes provided' }}"
        
    - name: Create GitHub release
      if: ${{ github.event.inputs.release_notes != '' }}
      run: |
        echo "üè∑Ô∏è Creating GitHub release..."
        # This would create a GitHub release with the provided notes
        # Implementation depends on your release strategy 